<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/mainLayout"
    tools:context=".MainActivity"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    >

    <!-- When controlling the scrolling behavior. This is where we need to do in the slidingUpPanel layout not in the coordinator layout above. -->
    <com.sothree.slidinguppanel.SlidingUpPanelLayout xmlns:sothree="http://schemas.android.com/apk/res-auto"
        android:id="@+id/sliding_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:gravity="bottom"
        sothree:umanoDragView="@+id/dragView"
        sothree:umanoOverlay="true"
        sothree:umanoPanelHeight="68dp"
        sothree:umanoShadowHeight="4dp"
        sothree:umanoScrollableView="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        sothree:layout_behavior="@string/appbar_scrolling_view_behavior"
        android:nestedScrollingEnabled="true"
        >



        <!-- Main layout -->
       <RelativeLayout
           android:id="@+id/nonDraggedView"
           android:layout_width="match_parent"
           android:layout_height="match_parent"
           >

           <!-- Coordinator layout allows for the scrolling animation to take place -->
           <android.support.design.widget.CoordinatorLayout
               android:id="@+id/coordLayout"
               xmlns:app="http://schemas.android.com/apk/res-auto"
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:orientation="vertical"
               android:nestedScrollingEnabled="true"
               >

               <!-- The view pager here should help us to be able to control what is being displayed to the users. . -->
               <android.support.v4.view.ViewPager
                   android:id="@+id/tabsViewPager"
                   xmlns:app="http://schemas.android.com/apk/res-auto"
                   android:layout_width="match_parent"
                   android:layout_height="match_parent"
                   app:layout_behavior="@string/appbar_scrolling_view_behavior"
                   android:nestedScrollingEnabled="true"
                   />

               <!-- Need to get this to disappear when the user is scrolling on the music player -->
               <!-- We want to animate the layout changes for the toolbar here because this is the parent of the toolbar -->
               <android.support.design.widget.AppBarLayout
                   android:id="@+id/appbar"
                   android:backgroundTint="@color/RoyalBlue"
                   android:layout_height="wrap_content"
                   android:layout_width="match_parent"
                   android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                   android:fitsSystemWindows="true"
                   >


                   <!-- Toolbar for users to be able to be able to use a search feature and access settings and change list preferences -->
                   <android.support.v7.widget.Toolbar
                       android:id="@+id/toolbar"
                       android:layout_height="?attr/actionBarSize"
                       android:layout_width="match_parent"
                       app:layout_scrollFlags="scroll|enterAlways"
                       android:background="@color/transparent"
                       app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                       >

                       <RelativeLayout
                           android:layout_width="match_parent"
                           android:layout_height="match_parent">

                           <!-- Search view allows users to be able to search for specific songs in the current list. -->
                           <SearchView
                               android:id="@+id/searchView"
                               android:layout_width="wrap_content"
                               android:layout_height="wrap_content"
                               android:layout_alignParentLeft="true"
                               android:layout_marginTop="25dp"
                               android:clickable="true"
                               >

                           </SearchView>

                           <!-- The textview should be changed depending on which tab/folder/playlist we are in. -->
                           <TextView
                               android:layout_width="200dp"
                               android:layout_height="match_parent"
                               android:text="Tornado Music Player"
                               android:maxLines="1"
                               android:textAlignment="center"
                               android:textSize="20dp"
                               android:textStyle="bold"
                               android:textColor="@color/white"
                               android:layout_toRightOf="@+id/searchView"
                               android:layout_marginTop="30dp"
                               />

                           <ImageView
                               android:id="@+id/filter_list"
                               android:layout_width="30dp"
                               android:layout_height="30dp"
                               android:src="@drawable/filter_list"
                               android:layout_marginTop="25dp"
                               android:layout_toLeftOf="@+id/extraOptionsMenu"
                               />

                           <ImageView
                               android:id="@+id/extraOptionsMenu"
                               android:layout_width="25dp"
                               android:layout_height="25dp"
                               android:layout_marginTop="25dp"
                               android:layout_marginRight="10dp"
                               android:src="@drawable/options"
                               android:layout_alignParentRight="true"
                               />

                       </RelativeLayout>


                   </android.support.v7.widget.Toolbar>

                   <!-- The tab layout design -->
                   <android.support.design.widget.TabLayout
                       android:id="@+id/tabs"
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
                       app:tabTextColor="@android:color/white"
                       app:tabSelectedTextColor="@android:color/white"
                       app:layout_scrollFlags="exitUntilCollapsed"
                       app:layout_collapseMode="pin"
                       app:tabMode="scrollable"
                       app:tabIndicatorColor="@color/white">

                       <android.support.design.widget.TabItem
                           android:id="@+id/songs"
                           android:layout_height="wrap_content"
                           android:layout_width="wrap_content"
                           android:text="Songs" />


                       <android.support.design.widget.TabItem
                           android:id="@+id/folders"
                           android:layout_height="wrap_content"
                           android:layout_width="wrap_content"
                           android:text="Folders" />

                       <android.support.design.widget.TabItem
                           android:id="@+id/playlists"
                           android:layout_height="wrap_content"
                           android:layout_width="wrap_content"
                           android:text="Playlists" />

                   </android.support.design.widget.TabLayout>


               </android.support.design.widget.AppBarLayout>




               <!-- Last item is cut off which is not good. We need to show all of the songs if at all possible. -->

               <!-- Removed because we want to populate the listview programmatically in MainUIFragment.
               <ListView
                   android:id="@+id/songsListView"
                   android:visibility="visible"
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:layout_below="@+id/appbar"
                   android:layout_alignParentBottom="true"
                   android:layout_alignWithParentIfMissing="true"
                   android:divider="@android:color/transparent"
                   android:dividerHeight="10dp"
                   android:nestedScrollingEnabled="true"
                   android:layoutAnimation="@anim/folderlistandplaylistlistanim"
                   app:layout_behavior="@string/appbar_scrolling_view_behavior"
                   >
               </ListView>


               <ListView
                   android:id="@+id/foldersListView"
                   android:visibility="gone"
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:layout_below="@+id/appbar"
                   android:layout_alignParentBottom="true"
                   android:layout_alignWithParentIfMissing="true"
                   android:divider="@android:color/transparent"
                   android:dividerHeight="10dp"
                   android:nestedScrollingEnabled="true"
                   android:layoutAnimation="@anim/folderlistandplaylistlistanim"
                   app:layout_behavior="@string/appbar_scrolling_view_behavior"
                   >
               </ListView>

               <ListView
                   android:id="@+id/openFolderSongsView"
                   android:visibility="gone"
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:layout_below="@+id/appbar"
                   android:layout_alignParentBottom="true"
                   android:layout_alignWithParentIfMissing="true"
                   android:divider="@android:color/transparent"
                   android:dividerHeight="10dp"
                   android:nestedScrollingEnabled="true"
                   android:layoutAnimation="@anim/folderandplaylistanim"
                   app:layout_behavior="@string/appbar_scrolling_view_behavior"

                   >

               </ListView>
                -->
               <!-- This Listview shows the all of the playlists
               <ListView
                   android:id="@+id/playlistList"
                   android:visibility="gone"
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:layout_below="@+id/appbar"
                   android:layout_alignParentBottom="true"
                   android:layout_alignWithParentIfMissing="true"
                   android:divider="@android:color/transparent"
                   android:dividerHeight="10dp"
                   android:nestedScrollingEnabled="true"
                   android:layoutAnimation="@anim/folderlistandplaylistlistanim"
                   app:layout_behavior="@string/appbar_scrolling_view_behavior"
                   >
               </ListView>
                -->

               <!-- This list view is shown when a playlist is selected and the songs are shown.
               <ListView
                   android:id="@+id/openPlaylistSongsView"
                   android:visibility="gone"
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:layout_below="@+id/appbar"
                   android:layout_alignParentBottom="true"
                   android:layout_alignWithParentIfMissing="true"
                   android:divider="@android:color/transparent"
                   android:dividerHeight="10dp"
                   android:nestedScrollingEnabled="true"
                   android:layoutAnimation="@anim/folderandplaylistanim"
                   app:layout_behavior="@string/appbar_scrolling_view_behavior"
                   >
               </ListView>
               -->

         </android.support.design.widget.CoordinatorLayout>




           <!-- This button will let us create a new playlist. -->
           <!-- Button will only appear when a user selects the playlist tab -->
           <!-- We have to keep the button out of the coordinator layout so it will be placed in the correct area -->
           <android.support.design.widget.FloatingActionButton
               android:id="@+id/addPlaylistButton"
               android:visibility="gone"
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:clickable="true"
               app:backgroundTint="@color/RoyalBlue"
               app:srcCompat="@drawable/plus"
               android:layout_alignParentBottom="true"
               android:layout_alignParentRight="true"
               android:layout_marginBottom="100dp"
               android:layout_marginRight="15dp"
               />


       </RelativeLayout>

        <!-- SLIDING LAYOUT -->
        <RelativeLayout
            android:id="@+id/draggedView"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="@android:color/white"
            android:clickable="false"
            android:focusable="false"
            android:orientation="vertical"
            android:visibility="gone"
            >

            <!-- Controls the UI for the top part of the sliding layout which is very important for getting it to look great -->
            <android.support.design.widget.AppBarLayout
                android:id="@+id/topBar"
                android:backgroundTint="@color/RoyalBlue"
                android:layout_height="70dp"
                android:layout_width="match_parent"
                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                android:fitsSystemWindows="true"
                >

                <RelativeLayout
                    android:layout_width="match_parent"
                    android:layout_height="match_parent">

                    <TextView
                        android:id="@+id/nowPlaying"
                        android:layout_width="match_parent"
                        android:layout_height="40dp"
                        android:layout_marginLeft="5dp"
                        android:text="Now Playing..."
                        android:textSize="18sp"
                        android:textColor="@color/white"
                        android:layout_centerInParent="true"
                        android:layout_alignParentRight="true"

                        />


                </RelativeLayout>

            </android.support.design.widget.AppBarLayout>




            <!-- Houses the text for the current song that is playing. -->
            <android.support.design.widget.AppBarLayout
                android:id="@+id/SongInfoBar"
                android:layout_width="match_parent"
                android:layout_height="100dp"
                android:backgroundTint="@color/RoyalBlue"
                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                android:fitsSystemWindows="true"
                android:layout_above="@+id/seekBar"
                >


                <RelativeLayout
                    android:layout_width="match_parent"
                    android:layout_height="match_parent">


                    <TextView
                        android:id="@+id/songText"
                        android:layout_width="match_parent"
                        android:layout_height="30dp"
                        android:layout_marginTop="20dp"
                        android:textSize="18sp"
                        android:textAlignment="center"
                        android:textColor="@color/white"
                        android:text="Song name..."
                        android:maxLines="1"
                        />

                    <TextView
                        android:id="@+id/artistText"
                        android:layout_width="match_parent"
                        android:layout_height="20dp"
                        android:layout_below="@id/songText"
                        android:textSize="13sp"
                        android:textAlignment="center"
                        android:text="Artist name..."
                        android:textColor="@color/white"
                        />

                    <TextView
                        android:id="@+id/songTimeText"
                        android:layout_width="match_parent"
                        android:layout_height="20sp"
                        android:layout_below="@id/artistText"
                        android:textSize="10sp"
                        android:textAlignment="center"
                        android:text="Artist name..."
                        android:textColor="@color/white"
                        />


                </RelativeLayout>


            </android.support.design.widget.AppBarLayout>


            <!-- This bar is in control of keeping the UpNext Text looking lively -->
            <android.support.design.widget.AppBarLayout
                android:id="@+id/upNextTextBar"
                android:layout_width="match_parent"
                android:layout_height="35dp"
                android:backgroundTint="@color/RoyalBlue"
                android:layout_alignParentBottom="true"
                >

                <TextView
                    android:id="@+id/upNextText"
                    android:layout_width="match_parent"
                    android:layout_height="20dp"
                    android:visibility="visible"
                    android:textSize="18sp"
                    android:text="Up next: Song Name"
                    android:textColor="@color/WhiteSmoke"
                    android:layout_marginTop="5dp"
                    />

            </android.support.design.widget.AppBarLayout>


            <!-- Album art for when a user selects a song -->
            <ImageView
                android:id="@+id/AlbumArt"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_centerInParent="true"
                android:layout_below="@id/topBar"
                android:layout_above="@id/SongInfoBar"
                android:background="@color/white"

                />

            <!-- This will be where we place the snackbar message when we want to display one -->>
            <android.support.design.widget.AppBarLayout
                android:id="@+id/snackbarAppbar"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_above="@+id/SongInfoBar"
                android:backgroundTint="@color/transparent"
                >

                <android.support.design.widget.CoordinatorLayout
                    android:id="@+id/snackbarlocation"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_centerHorizontal="true">
                </android.support.design.widget.CoordinatorLayout>

            </android.support.design.widget.AppBarLayout>

            <!-- Seek bar for when a user selects a song
                 We can change the color of the background using the background xml code tag and selecting our color.
            -->
            <android.support.v7.widget.AppCompatSeekBar
                android:id="@+id/seekBar"
                android:layout_width="match_parent"
                android:layout_height="13dp"
                android:layout_above="@+id/MusicControlBar"
                android:layout_alignParentLeft="true"
                android:visibility="visible"
                android:progressTint="@color/RoyalBlue"
                android:thumbTint="@color/IconsOnColor"

                />

            <!-- Has all of the music controls that the user will use for the music player -->
            <android.support.design.widget.AppBarLayout
                android:id="@+id/MusicControlBar"
                android:backgroundTint="@color/RoyalBlue"
                android:layout_height="60dp"
                android:layout_width="match_parent"
                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                android:fitsSystemWindows="true"
                android:layout_above="@id/upNextTextBar"
                >

                <!-- TODO: need make it so that when one of these items are selected it will have a little animation for when a button is selected -->
                <RelativeLayout
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    >

                    <ImageView
                        android:id="@+id/pauseButton"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:layout_centerInParent="true"
                        android:clickable="true"
                        android:src="@drawable/pause"
                        />

                    <ImageView
                        android:id="@+id/playButton"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:layout_centerInParent="true"
                        android:visibility="gone"
                        android:src="@drawable/play"
                        />

                    <ImageView
                        android:id="@+id/skipButton"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:layout_marginRight="90dp"
                        android:layout_alignParentRight="true"
                        android:layout_centerInParent="true"
                        android:src="@drawable/skip"
                        />

                    <ImageView
                        android:id="@+id/prevButton"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:layout_alignParentLeft="true"
                        android:layout_marginLeft="90dp"
                        android:layout_centerInParent="true"
                        android:src="@drawable/prev"
                        />

                    <!-- Below here will go the music controls such as shuffle and repeat -->

                    <ImageView
                        android:id="@+id/shuffleOff"
                        android:visibility="visible"
                        android:layout_width="27dp"
                        android:layout_height="27dp"
                        android:layout_alignParentLeft="true"
                        android:layout_marginLeft="25dp"
                        android:layout_centerInParent="true"
                        android:clickable="true"
                        android:src="@drawable/shuffleoff"
                        />


                    <ImageView
                        android:id="@+id/shuffleOn"
                        android:visibility="invisible"
                        android:layout_width="27dp"
                        android:layout_height="27dp"
                        android:layout_alignParentLeft="true"
                        android:layout_marginLeft="25dp"
                        android:layout_centerInParent="true"
                        android:clickable="true"
                        android:src="@drawable/shuffleon"
                        />

                    <ImageView
                        android:id="@+id/repeatOff"
                        android:visibility="visible"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:layout_alignParentRight="true"
                        android:layout_centerInParent="true"
                        android:layout_marginRight="25dp"
                        android:clickable="true"
                        android:src="@drawable/repeatoff"
                        />

                    <ImageView
                        android:id="@+id/repeatOn"
                        android:visibility="invisible"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:layout_alignParentRight="true"
                        android:layout_centerInParent="true"
                        android:layout_marginRight="25dp"
                        android:clickable="true"
                        android:src="@drawable/repeaton"
                        />


                </RelativeLayout>


            </android.support.design.widget.AppBarLayout>

        </RelativeLayout> <!-- End of the sliding u.i. relative layout -->

    </com.sothree.slidinguppanel.SlidingUpPanelLayout>

</android.support.design.widget.CoordinatorLayout>
